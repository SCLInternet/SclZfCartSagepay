<?php
namespace SclZfCartSagepayTests;

use SclZfCartSagepay\Sagepay;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-02-15 at 17:30:38.
 */
class SagepayTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Sagepay
     */
    protected $object;

    protected $dataProvider;

    protected $blockCipher;

    protected $cryptData;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->dataProvider = $this->getMockBuilder('SclZfCartSagepay\Data\Config')->disableOriginalConstructor()->getMock();

        $this->blockCipher = $this->getMockBuilder('Zend\Crypt\BlockCipher')->disableOriginalConstructor()->getMock();

        $this->cryptData = $this->getMock('SclZfCartSagepay\Data\CryptData');

        $this->object = new Sagepay($this->dataProvider, $this->blockCipher, $this->cryptData);
    }

    /**
     * @covers SclZfCartSagepay\Sagepay::name
     * @todo   Implement testName().
     */
    public function testName()
    {
        $this->dataProvider->expects($this->once())
            ->method('__get')
            ->with($this->equalTo('name'))
            ->will($this->returnValue('Sagepay Name'));

        $this->assertEquals('Sagepay Name', $this->object->name());
    }

    /**
     * @covers SclZfCartSagepay\Sagepay::updateCompleteForm
     * @todo   Implement testUpdateCompleteForm().
     */
    public function testUpdateCompleteForm()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers SclZfCartSagepay\Sagepay::complete
     * @todo   Implement testComplete().
     */
    public function testComplete()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'This test has not been implemented yet.'
        );
    }

    /**
     * @covers SclZfCartSagepay\Data\Config::getCrypt
     * @covers SclZfCartSagepay\Data\Config::setCart
     * @todo   Implement testGetCrypt().
     */
    /*
    public function testGetCrypt()
    {
        $this->cryptData->expects($this->once())
            ->method('__toString')
            ->will($this->returnValue('data_string'));

        $this->blockCipher->expects($this->once())
            ->method('encrypt')
            ->with($this->equalTo('data_string'))
            ->will($this->returnValue('encrypted_string'));

        $this->assertEquals(base64_encode('encrypted_string'), $this->object->getCrypt());

        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
          'Need to test the correct data is added and test the password'
        );
    }
    */
}
